buildscript {
    ext {
        kotlinVersion = '1.2.31'
        springBootVersion = '1.5.9.RELEASE'
        jacksonKotlinModuleVersion = '2.9.0'

        unirestVersion = '1.4.9'

        junitPlatformVersion = '1.0.2'
        junitJupiterVersion = '5.0.2'
    }

    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
        classpath("org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

group 'cn.staynoob'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-noarg"
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}

noArg {
    annotation("cn.staynoob.social.kotlin.NoArgConstructor")
}
allOpen {
    annotation("cn.staynoob.social.kotlin.KotlinAllOpen")
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    compile("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonKotlinModuleVersion}")

    compile('org.springframework.boot:spring-boot-starter')
    compile('org.hibernate:hibernate-validator:+')

    compile("com.mashape.unirest:unirest-java:$unirestVersion")

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit"
    }
    // junit5
    testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile('com.github.sbrannen:spring-test-junit5:1.0.0')
    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}