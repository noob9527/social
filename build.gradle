buildscript {
    ext.repos = {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
        mavenCentral()
    }
    repositories repos
}

plugins {
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.2.71'
    id "org.jetbrains.kotlin.kapt" version "1.2.30"
}

group 'cn.staynoob'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories repos

allprojects {
    repositories repos
}

ext {
    kotlinVersion = '1.2.71'
    springBootVersion = '2.0.2.RELEASE'
    jacksonKotlinModuleVersion = '2.9.0'
    unirestVersion = '1.4.9'
    junitVersion = '5.4.2'
}

// see https://spring.io/guides/gs/multi-module/
dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonKotlinModuleVersion}")

    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.hibernate:hibernate-validator:+')

    implementation("com.mashape.unirest:unirest-java:$unirestVersion")

    // refer to
    // https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/html/configuration-metadata.html#configuration-metadata-annotation-processor
    // https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-kotlin.html
    // https://kotlinlang.org/docs/reference/kapt.html
    // https://info.michael-simons.eu/2018/07/15/spring-boots-configuration-metadata-with-kotlin/
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // somehow this line is also needed by idea
    kapt 'org.springframework.boot:spring-boot-configuration-processor'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit"
    }
    // junit5
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

// this is necessary if you want to put java source code in the kotlin directory
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

